name: Build and test
on: 
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      ubuntu_version:
        required: true
        type: string
      compiler:
        required: true
        type: string
env:
  CC: ${{ inputs.compiler }}
  CXX: ${{ inputs.compiler == 'clang-19' && 'clang++-19' || 'g++' }}
      
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-${{ inputs.ubuntu_version }}.04
    steps:

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          sudo apt-get install -y python3-full pipx cmake ninja-build
          pipx ensurepath
          sudo pipx install conan
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          sudo apt install clang-tools-19

      - name: Setup conan
        run: |
          conan profile detect
          sed -i 's/gnu../20/g' /home/runner/.conan2/profiles/default 
          echo "[tool_requires]" >> /home/runner/.conan2/profiles/default
          echo "!cmake/*: cmake/[>=3 <4]" >> /home/runner/.conan2/profiles/default
          cat /home/runner/.conan2/profiles/default

      - name: Clone repository
        uses: actions/checkout@master
        with:
          path: 'src/stormweaver'
          submodules: recursive

      - name: Install/build dependencies
        run: |
          conan install . --build=missing --settings=build_type=${{ inputs.build_type }}
        working-directory: src/stormweaver


      - name: Build stormweaver
        run: |
          conan build . --settings=build_type=${{ inputs.build_type }}
        working-directory: src/stormweaver

      - name: Install PostgreSQL
        run: |
          sudo apt install postgresql

      - name: Run CTest
        run: |
          ctest -VV --output-junit test-reports/ctest.xml --output-on-failure
        working-directory: src/stormweaver/build/${{ inputs.build_type }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests_${{ inputs.build_type }}_${{inputs.ubuntu_version }}+${{ inputs.compiler }}
          path: src/stormweaver/build/${{ inputs.build_type }}/test-reports/

      - name: Create release directory
        run: |
          mkdir release
          cp -r src/stormweaver/bin release/
          cp -r src/stormweaver/stormweaver release/

      - name: Create tgz
        run: |
          export GLIBC_VER=`ldd --version | head -n 1 | cut -d " " -f 5 | tr "." "_"`
          mkdir tars
          cd release && sudo tar -czvf ../tars/stormweaver_${{ inputs.build_type }}_${{ inputs.compiler }}_glibc$GLIBC_VER.tar.gz .

      - name: Upload tgz
        uses: actions/upload-artifact@v4
        with:
          name: release_${{ inputs.build_type }}_${{inputs.ubuntu_version }}_${{ inputs.compiler }}
          path: tars

      - name: Report on test fail
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: testlog_${{ inputs.build_type }}_${{inputs.ubuntu_version }}_${{ inputs.compiler }}
          path: |
            src/stormweaver/logs/
          retention-days: 3
